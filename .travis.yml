jobs:
  include:
    - stage: create vpc and subnets
      language: python
      python:
        - 3.7
      env:
        - AWS_REGION=eu-central-1
        - TAG_ENVIRONMENT=ansible-cfn
        - VPC_CIDR=10.0.0.0/24
        - PUBLIC_SUBNET_1_CIDR=10.0.0.0/28
        - PUBLIC_SUBNET_2_CIDR=10.0.0.16/28
      before_install:
        - cd ansible
      install:
        - pip install -r requirements.txt -q
      before_script:
        - ansible-galaxy collection install amazon.aws
      script:
        - ansible-playbook -i inventories/aws_ec2.yml playbooks/10_cfn_network.yml --tags create -v

    - stage: create ec2 instances in an asg with a load balancer
      language: python
      python:
        - 3.7
      env:
        - AWS_REGION=eu-central-1
        - TAG_ENVIRONMENT=ansible-cfn
        - TAG_NAME="Apache Web Server"
        - TAG_GROUP=webservers
        - INSTANCE_TYPE=t2.small
        - SSH_LOCATION=/ansible-cfn/ssh_location
        - KEY_NAME=/ansible-cfn/key_name
      before_install:
        - cd ansible
      install:
        - pip install -r requirements.txt -q
      before_script:
        - ansible-galaxy collection install amazon.aws
      script:
        - ansible-playbook -i inventories/aws_ec2.yml playbooks/20_cfn_compute.yml --tags create -v

    - stage: configure httpd servers
      language: python
      python:
        - 3.7
      before_install:
        - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        - unzip awscliv2.zip
        - sudo ./aws/install
        - scripts/get_ssh_key.sh
        - cd ansible
      install:
        - pip install -r requirements.txt -q
      before_script:
        - ansible-inventory -i inventories/aws_ec2.yml --graph
      script:
        - ansible-playbook -i inventories/aws_ec2.yml playbooks/30_httpd.yml -v
